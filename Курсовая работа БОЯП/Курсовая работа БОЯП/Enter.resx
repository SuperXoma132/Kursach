<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AZkKSRlf+h/uAAAAAElFTkSuQmCC
</value>
  </data>
</root>